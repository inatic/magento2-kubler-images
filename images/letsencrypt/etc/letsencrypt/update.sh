#!/bin/bash
# This script updates LetsEncrypt certificates for the domains in /certificates and should be executed by the letsencrypt user
# It fetches or generates:
#   - dhparam2048.pem
#   - intermediate.pem
#   - account.key
#   - openssl.cnf
#   - domain.csr
#   - signed.crt
#   - domain.crt
# The domain.key file should already be present as it was generated by the proxy server

# Newly created files should only be writeable by the letsencrypt owner
umask 033

echo "Fetching LetsEncrypt intermediate certificate"
wget -O - https://letsencrypt.org/certs/lets-encrypt-r3.pem > /certificates/intermediate.pem

echo "Creating Diffie-Hellman parameters"
if [ ! -f /certificates/dhparam2048.pem ]; then
    openssl dhparam -out /certificates/dhparam2048.pem 2048
fi

echo "Checking if there are domains in the /certificates folder"
subdircount=`find /certificates/ -mindepth 1 -maxdepth 1 -type d | wc -l`

if [ $subdircount -eq 0 ]
then
    echo "No domains defined in the /certificates folder"
else
    # go through domains
    for path in /certificates/*/ ; do
        dir=${path%*/}       # remove the trailing "/"
        d=${dir##*/}         # print everything after the final "/"
        # skip 'localhost' domain                                          
        if [ "$d" == "localhost" ]                                       
        then                                                             
            continue                                               
        fi
        # generating account key, config and csr if necessary
        if [ ! -f ${dir}/account.key ]; then
            echo "Processing ${d}:"
            echo "Generating account key"
	        openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:4096 -out ${dir}/account.key
	        echo "Generating configuration"
	        cp /etc/ssl/openssl.cnf ${path}
cat <<- EOL >> ${dir}/openssl.cnf
[SAN]
subjectAltName = @alt_names

[alt_names]
DNS.1 = ${d}
DNS.2 = www.${d}
EOL
	        echo "Generating certificate signing request"
            openssl req -new -sha256 -key ${dir}/domain.key -subj "/" -reqexts SAN \
                -config ${dir}/openssl.cnf > ${dir}/domain.csr
        fi

        echo "Fetching signed certificate"
        python /usr/bin/acme-tiny/acme_tiny.py --account-key ${dir}/account.key \
            --csr ${dir}/domain.csr --acme-dir /challenge/ > ${dir}/signed.crt
        #Check new certificate
        status=$(openssl verify -CAfile /certificates/intermediate.pem ${dir}/signed.crt)
        echo "Openssl verify status: $status"
        if [[ $status == *": OK" ]]; then
            #Create backup of certificate
            cp ${dir}/domain.crt "${dir}/domain.crt.$(date +%F_%R)"
            echo "Merging certificate with intermediate"
            cat ${dir}/signed.crt /certificates/intermediate.pem > ${dir}/domain.crt
        else
           echo "Error: there is a problem with the letsencrypt certificate"
        fi
    done
fi

